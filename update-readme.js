const { promises: fs } = require("fs");
const path = require("path");
const { exec } = require("child_process");
const util = require("util");
const execAsync = util.promisify(exec);

const readmePath = path.join(__dirname, "README.md");

function getTodayDate() {
  const today = new Date();
  const day = String(today.getDate()).padStart(2, "0");
  const month = String(today.getMonth() + 1).padStart(2, "0");
  const year = today.getFullYear();
  return `${day}/${month}/${year}`;
}

async function commitToGitHub() {
  try {
    const date = getTodayDate();
    // Configuration pour s'assurer que les commits sont bien comptabilis√©s
    await execAsync('git config --global user.name "Martialdepaul"');
    await execAsync('git config --global user.email "votre-email@example.com"');

    // Ajout et commit des modifications
    await execAsync("git add README.md");
    await execAsync(
      `git commit -m "docs: üìÖ mise √† jour quotidienne ${date} [bot]"`
    );
    await execAsync("git push origin main");

    console.log("‚úÖ Mise √† jour push√©e sur GitHub avec succ√®s !");
  } catch (error) {
    console.error("‚ùå Erreur lors du push vers GitHub :", error);
  }
}

async function main() {
  try {
    const readmeContent = await fs.readFile(readmePath, "utf-8");
    const dateRegex = /##\s*üìÖ\s*\*\*Mise √† jour du jour\*\*\s*:\s*\d{2}\/\d{2}\/\d{4}/i;
    const newDateLine = `## üìÖ **Mise √† jour du jour** : ${getTodayDate()}`;

    if (!dateRegex.test(readmeContent)) {
      console.error("‚ùå Aucune date trouv√©e dans le README !");
      return;
    }

    const updatedContent = readmeContent.replace(dateRegex, newDateLine);

    if (readmeContent !== updatedContent) {
      await fs.writeFile(readmePath, updatedContent, "utf-8");
      console.log("üìù README mis √† jour avec succ√®s !");
      await commitToGitHub();
    } else {
      console.log(
        "‚ÑπÔ∏è La date est d√©j√† √† jour. Aucune modification n√©cessaire."
      );
    }
  } catch (error) {
    console.error("‚ùå Erreur lors de la mise √† jour :", error);
  }
}

main();
